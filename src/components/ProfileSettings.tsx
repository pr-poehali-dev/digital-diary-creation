import { useState } from 'react';
import { Button } from '@/components/ui/button';
import { Input } from '@/components/ui/input';
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';
import { Label } from '@/components/ui/label';
import Icon from '@/components/ui/icon';
import { toast } from 'sonner';

type User = {
  id: string;
  email: string;
  password: string;
  role: 'teacher' | 'student';
  name: string;
  avatar?: string;
};

type ProfileSettingsProps = {
  user: User;
  onUpdateProfile: (avatar: string, name: string) => void;
};

const avatarOptions = [
  'üë®‚Äçüè´', 'üë©‚Äçüè´', 'üßë‚Äçüè´',
  'üë®‚Äçüéì', 'üë©‚Äçüéì', 'üßë‚Äçüéì',
  'üë®', 'üë©', 'üßë',
  'üòä', 'üòÑ', 'ü§ì', 'üòé',
  'üéí', 'üìö', 'üìñ', '‚úèÔ∏è'
];

const ProfileSettings = ({ user, onUpdateProfile }: ProfileSettingsProps) => {
  const [name, setName] = useState(user.name);
  const [avatar, setAvatar] = useState(user.avatar || 'üë®‚Äçüè´');

  const handleSubmit = (e: React.FormEvent) => {
    e.preventDefault();
    onUpdateProfile(avatar, name);
    toast.success('–ü—Ä–æ—Ñ–∏–ª—å —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω');
  };

  return (
    <Card>
      <CardHeader>
        <CardTitle>–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–æ—Ñ–∏–ª—è</CardTitle>
        <CardDescription>–ü–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä—É–π—Ç–µ –≤–∞—à –ø—Ä–æ—Ñ–∏–ª—å</CardDescription>
      </CardHeader>
      <CardContent>
        <form onSubmit={handleSubmit} className="space-y-6">
          <div className="flex items-center gap-6 p-6 bg-gradient-to-br from-blue-50 to-gray-50 rounded-lg">
            <div className="text-8xl">{avatar}</div>
            <div className="flex-1">
              <h3 className="text-2xl font-bold">{name}</h3>
              <p className="text-muted-foreground">{user.email}</p>
              <p className="text-sm text-muted-foreground mt-1">
                {user.role === 'teacher' ? '–£—á–∏—Ç–µ–ª—å' : '–£—á–µ–Ω–∏–∫'}
              </p>
            </div>
          </div>

          <div className="space-y-2">
            <Label htmlFor="profileName">–ò–º—è</Label>
            <Input
              id="profileName"
              value={name}
              onChange={(e) => setName(e.target.value)}
              placeholder="–í–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ –∏–º—è"
              required
            />
          </div>

          <div className="space-y-3">
            <Label>–í—ã–±–µ—Ä–∏—Ç–µ –∞–≤–∞—Ç–∞—Ä</Label>
            <div className="grid grid-cols-8 gap-3">
              {avatarOptions.map((av) => (
                <button
                  key={av}
                  type="button"
                  onClick={() => setAvatar(av)}
                  className={`text-4xl w-16 h-16 rounded-lg border-2 transition-all hover:scale-110 ${
                    avatar === av
                      ? 'border-primary bg-primary/10 scale-110 shadow-lg'
                      : 'border-gray-200 hover:border-primary/50'
                  }`}
                >
                  {av}
                </button>
              ))}
            </div>
          </div>

          <Button type="submit" className="w-full">
            <Icon name="Save" size={16} className="mr-2" />
            –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è
          </Button>
        </form>

        <div className="mt-6 p-4 bg-gray-50 rounded-lg">
          <h4 className="font-semibold mb-2 flex items-center gap-2">
            <Icon name="Info" size={16} />
            –£—á–µ—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
          </h4>
          <div className="space-y-1 text-sm">
            <p>
              <span className="text-muted-foreground">–õ–æ–≥–∏–Ω:</span>{' '}
              <span className="font-mono font-semibold">{user.email}</span>
            </p>
            <p>
              <span className="text-muted-foreground">–ü–∞—Ä–æ–ª—å:</span>{' '}
              <span className="font-mono">‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢</span>
            </p>
          </div>
        </div>
      </CardContent>
    </Card>
  );
};

export default ProfileSettings;
